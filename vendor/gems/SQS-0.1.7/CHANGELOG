0.1.7
2008-02-21
* You can now call SQS.conf_file = 'some_file.yml' to set access_key_id and
secret_access_key.  SQS assumes this file is YAML.  This way, you don't have to
store your AWS credentials in your code (and I don't run the risk of committing
my credentials to SVN every time I do a commit!).

0.1.6
2008-02-19
* Maintenance release to keep up with Amazon SQS API changes. All but one test should be
passing.  See next bullet.
* Still experiencing the problem outlined here:
http://developer.amazonwebservices.com/connect/thread.jspa?threadID=15798
* Added a random string to the test queues to allow deletion in teardown (without waiting for
60 seconds of propagation).
* Updated to require assert_statistically 0.2.1 (was using 0.1.1).  Some tests may fail
with 0.1.1.

0.1.5
2007-07-18
* sqs_queue_test.rb is now dependent on the assert_statistically gem.  You can still
run SQS without assert_statistically, but you will need assert_statistically to run
the tests.
* http://developer.amazonwebservices.com/connect/thread.jspa?threadID=15618&tstart=0
is now resolved and tested.
* Exceptions are now custom SQS:: classes, generated from the error code returned in
the web service XML.  No more generic RuntimeErrors!
* http://developer.amazonwebservices.com/connect/thread.jspa?messageID=61724&#61724
is now resolved and tested.
* Changed SQS.reasons_not_to_retry to SQS.reasons_to_retry and it's now being used!
(See http://developer.amazonwebservices.com/connect/thread.jspa?messageID=56888&#56888)
* The user can now SQS.add_reasons_to_retry and SQS.remove_reasons_to_retry
* The user can now set the number of times to retry, when a request fails and the
error code is included? in SQS.reasons_to_retry
* Add a random sleep between retries
* Ensure that retrying doesn't sleep on the final iteration of the loop

0.1.4
2007-06-12
* Upped the API version to 2007-05-01
* Queue#force_delete is deprecated.  Please use Queue#delete!.  Queue#force_delete
is not guaranteed to be available after SQS v0.1.4
* Added Queue#get_queue_attributes and Queue#set_queue_attributes, and syntactic sugar
Queue#approximate_number_of_messages, Queue#visibility_timeout, and Queue#visibility_timeout=
Note that these three sugar methods aren't really methods, but are handled in Queue#method_missing
Note that these changes do not change the invocation of visibility_timeout or visibility_timeout=
* Added Queue#empty?, which calls self.peek, not self.approximate_number_of_messages, which should
mean that the result is accurate.
* Looks like Amazon fixed
http://developer.amazonwebservices.com/connect/thread.jspa?threadID=15364&tstart=0
* Added a small test for SQS.call_web_service
* Added a test to check for valid queue names
* Test messages up to 6000 bytes in length--this will require further work, since it's erroring out on my machine, before I even get to the supported 8K message size.
* Added Queue#each_message
NOTE that Queue#each_message is an infinite loop!  You must either break out of it, or delete each
message as it comes.
* NOTE
http://developer.amazonwebservices.com/connect/thread.jspa?threadID=15618&tstart=0
Is unresolved


0.1.3
2007-04-25
* Missed one "include REXML."



0.1.2
2007-04-25
* No longer includes REXML in the default namespace, to avoid collisions.  Thanks to Kyle Maxwell.



0.1.1
2007-02-19
* Added Queue#peek_messages() and Queue#peek_message().  Thanks to Robert J. Berger for pointing out that receiving a message with VisibilityTimeout=0 is the functional equivalent of a peek.
* Changed shebang in message.rb and queue.rb.  Thanks to Nobody at http://rubyforge.org/tracker/index.php?func=detail&aid=7124&group_id=2645&atid=10183
* Added shebangs where they were missing.



0.1.0
2006-11-22
Initial release