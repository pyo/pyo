== PutYourselfOn.com

This the Ruby on Rails application powering PutYourselfOn.com.

WARNING: production and staging deployments are not working.

This is a work in Progress.

Pivotal Tracker for tasks is here:

http://www.pivotaltracker.com/projects/63649

Production Server is Amazon EC2.

Staging Server is:
67.202.20.214

http://67.202.20.214

username: admin
password: testit!

== Required libraries

* amazon-ec2 version 0.2.6.  WARNING, newer versions do not work:
  
  sudo gem install amazon-ec2 --version "=0.2.6"
  
* capsize

  sudo gem install jnewland-capsize -s http://gems.github.com


== Making changes to the server

To add new packages or make configuration changes on the server, please
edit the following files. They contain examples for common configurations.
If you have any questions about how to make a particular change, the Rails
Machine staff is always ready to help.

- config/moonshine.yml

  Use this file to manage configuration related to deploying and
  running the app: domain name, git repos, package dependencies for
  gems, and more.

- app/manifests/application_manifest.rb

  Use this to manage the configuration of everything else on the
  server: define the server 'stack', cron jobs, mail aliases,
  configuration files

== Deploying
 
- config/moonshine.yml
 
  Use this file to manage configuration related to deploying and
  running the app: domain name, git repos, package dependencies for
  gems, and more.
 
- app/manifests/application_manifest.rb
 
  Use this to manage the configuration of everything else on the
  server: define the server 'stack', cron jobs, mail aliases,
  configuration files
 
We're using the multi-stage deployment functionality of the excellent
<tt>capistrano-ext</tt> gem to allow you to separately deploy to your staging
and production server. If you don't already have this gem installed,
please do so by running <tt>sudo gem install capistrano-ext</tt>.

Use <tt>cap staging deploy</tt> to deploy to staging and <tt>cap production
deploy</tt> to update production code.

On every deployment, Moonshine will make sure that all gems, packages, 
and configurations are as specified in <tt>moonshine.yml</tt> and in the
manifest.

